---
- name: Example showing VMware HTTP API utilization
  hosts: localhost
  gather_facts: no
  vars_files:
    - vcenter_vars.yml
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"
    cluster_name:
      LNK-LAB
      OMA-LAB
  tasks:
    - name: Login into vCenter and get cookies
      uri:
        url: https://{{ vcenter_server }}/rest/com/vmware/cis/session
        force_basic_auth: yes
        validate_certs: no
        method: POST
        user: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
      register: vcsa_session

    - name: Set session ID as fact
      set_fact:
        vcsa_session_id: "{{ vcsa_session.json.value }}"        
    - name: Set Cluster ID
      
    - name: Gather vmware host facts from vCenter
      community.vmware.vmware_host_facts:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        esxi_hostname: "{{ esxi_hostname }}"
        show_tag: true
        schema: vsphere
      register: host_facts
    - set_fact:
        host_id: "{{ host_facts['ansible_facts']['_vimid'] }}"
        cluster_id: "{{ host_facts['ansible_facts']['vim.ClusterComputeResource'] }}"
      delegate_to: localhost

    - name: Extract update level info from option properties
      set_fact:
        update_level_info: "{{ item.value }}"
      loop: "{{ host_facts.ansible_facts.config.option }}"
      when:
        - item.key == 'Misc.HostAgentUpdateLevel'
   
    - name: The output of Product, Version, Build, Update info for ESXi
      debug:
        msg:
        - "Host_ID : {{ host_id }}"
        - "Update : {{ update_level_info }}"

    - name: Apply the desired image to the ESXi hosts in the cluster
      uri:
        url: "https://{{ vcenter_server }}/api/esx/settings/clusters/{{ cluster_id }}/software?action=apply&vmw-task=true"
        method: POST
        headers:
          vmware-api-session-id: "{{ vcsa_session_id }}"
          Content-Type: "application/json"
        body_format: json
        body: '{"accept_eula":true,"hosts":["{ host_id }"]}'
        validate_certs: no
      register: apply_image_task

    - name: Monitor the task status for image application
      uri:
        url: "https://{{ vcenter_server }}/rest/vcenter/task/{{ apply_image_task.json.value }}"
        method: GET
        headers:
          vmware-api-session-id: "{{ vcsa_session_id }}"
          Content-Type: "application/json"
        validate_certs: no
      register: task_status
      until: task_status.json.value.state == "completed"
      retries: 10
      delay: 60

    - name: Display the final task status
      debug:
        msg: "Image update task completed with status: {{ task_status.json.value.state }}"
        
