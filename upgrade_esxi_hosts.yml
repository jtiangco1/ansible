---
- name: Example showing VMware HTTP API utilization
  hosts: localhost
  gather_facts: no
  vars_files:
    - vcenter_vars.yml
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"
  tasks:
    - name: Login into vCenter and get cookies
      uri:
        url: https://{{ vcenter_server }}/rest/com/vmware/cis/session
        force_basic_auth: yes
        validate_certs: no
        method: POST
        user: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
      register: login

    - name: Get all hosts from vCenter using cookies from last task
      uri:
        url: https://{{ vcenter_server }}/rest/vcenter/host
        force_basic_auth: yes
        validate_certs: no
        headers:
          Cookie: "{{ login.set_cookie }}"
      register: vchosts


    - name: Gather vmware host facts from vCenter
      community.vmware.vmware_host_facts:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        esxi_hostname: "{{ esxi_hostname }}"
        show_tag: true
        schema: vsphere
      register: host_facts
      delegate_to: localhost

    - name: Extract update level info from option properties
      set_fact:
        update_level_info: "{{ item.value }}"
      loop: "{{ gather_host_facts_result.ansible_facts.config.option }}"
      when:
        - item.key == 'Misc.HostAgentUpdateLevel'
   
    - name: The output of Product, Version, Build, Update info for ESXi
      debug:
        msg:
           - "Host : {{ host_facts }}"
           - "Update : {{ update_level_info }}


#    - name: Change Log level configuration of the given hostsystem
#      vmware_host_config_manager:
#        hostname: "{{ vcenter_server }}"
#        username: "{{ vcenter_user }}"
#        password: "{{ vcenter_pass }}"
#        esxi_hostname: "{{ item.name }}"
#        options:
#          'Config.HostAgent.log.level': 'error'
#        validate_certs: no
#      loop: "{{ vchosts.json.value }}"
#      register: host_config_results
